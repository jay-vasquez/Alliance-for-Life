@model IEnumerable<Alliance_for_Life.Models.AllocatedBudget>

@{
    ViewBag.Title = "Allocated Budgets";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

<table class="table">
    <tr>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.Subcontractor.OrgName)
        </th>
        <th>
            @Html.DisplayName("July Biling")
        </th>
        <th>
            @Html.DisplayName("August Biling")
        </th>
        <th>
            @Html.DisplayName("September Biling")
        </th>
        <th>
            @Html.DisplayName("October Biling")
        </th>
        <th>
            @Html.DisplayName("November Biling")

        </th>
        <th>
            @Html.DisplayName("December Biling")
        </th>
        <th>
            @Html.DisplayName("January Biling")
        </th>
        <th>
            @Html.DisplayName("February Biling")
        </th>
        <th>
            @Html.DisplayName("March Biling")
        </th>
        <th>
            @Html.DisplayName("April Biling")
        </th>
        <th>
            @Html.DisplayName("May Biling")
        </th>
        <th>
            @Html.DisplayName("June Biling")
        </th>
        <th>
           Cycle End Adjustments
        </th>
        <th>
            Allocation Adjustments
        </th>
        <th>
            Begining Allocated Amount
        </th>
        <th>
            Adjustment Date
        </th>

        <th></th>
    </tr>

    @foreach (var group in Model.GroupBy(item => item.Subcontractor.OrgName))
    {
        <tr>
            <td>
                @*@Html.ActionLink("Details", "Details", new { group = Model.AllocatedBudgetId })*@
            </td>
            <td>
                @Html.Encode(group.Key)
            </td>
            <td>

                @foreach (var item in group)
                {
                    if (item.Invoice.Select(a => a.Month).Contains(Alliance_for_Life.Models.Months.July))
                    {

                  @item.Invoice.Where(a => a.Month == Alliance_for_Life.Models.Months.July).Select(a => a.GrandTotal).SingleOrDefault().ToString("C")
                    }
                }
            </td>
            <td>
                @foreach (var item in group)
                {
                    if (item.Invoice.Select(a => a.Month).Contains(Alliance_for_Life.Models.Months.August))
                    {
                        @item.Invoice.Where(a => a.Month == Alliance_for_Life.Models.Months.August).Select(a => a.GrandTotal).SingleOrDefault().ToString("C")

                    }

                }
            </td>
            <td>
                @foreach (var item in group)
                {
                    if (item.Invoice.Select(a => a.Month).Contains(Alliance_for_Life.Models.Months.September))
                    {
                    @item.Invoice.Where(a => a.Month == Alliance_for_Life.Models.Months.September).Select(a => a.GrandTotal).SingleOrDefault().ToString("C")
                    }
                }
            </td>
            <td>
                @foreach (var item in group)
                {
                    if (item.Invoice.Select(a => a.Month).Contains(Alliance_for_Life.Models.Months.October))
                    {

                    @item.Invoice.Where(a => a.Month == Alliance_for_Life.Models.Months.October).Select(a => a.GrandTotal).SingleOrDefault().ToString("C")
                    }
                }
            </td>
            <td>
                @foreach (var item in group)
                {
                    if (item.Invoice.Select(a => a.Month).Contains(Alliance_for_Life.Models.Months.November))
                    {
                    @item.Invoice.Where(a => a.Month == Alliance_for_Life.Models.Months.November).Select(a => a.GrandTotal).SingleOrDefault().ToString("C")
                    }
                }
            </td>
            <td>
                @foreach (var item in group)
                {
                    if (item.Invoice.Select(a => a.Month).Contains(Alliance_for_Life.Models.Months.December))
                    {

                    @item.Invoice.Where(a => a.Month == Alliance_for_Life.Models.Months.December).Select(a => a.GrandTotal).SingleOrDefault().ToString("C")
                    }
                }
            </td>
            <td>
                @foreach (var item in group)
                {
                    if (item.Invoice.Select(a => a.Month).Contains(Alliance_for_Life.Models.Months.January))
                    {

                    @item.Invoice.Where(a => a.Month == Alliance_for_Life.Models.Months.January).Select(a => a.GrandTotal).SingleOrDefault().ToString("C")
                    }
                }
            </td>

            <td>
                @foreach (var item in group)
                {
                    if (item.Invoice.Select(a => a.Month).Contains(Alliance_for_Life.Models.Months.February))
                    {

                    @item.Invoice.Where(a => a.Month == Alliance_for_Life.Models.Months.February).Select(a => a.GrandTotal).SingleOrDefault().ToString("C")
                    }
                }
            </td>

            <td>
                @foreach (var item in group)
                { if (item.Invoice.Select(a => a.Month).Contains(Alliance_for_Life.Models.Months.March))
                    {

                    @item.Invoice.Where(a => a.Month == Alliance_for_Life.Models.Months.March).Select(a => a.GrandTotal).SingleOrDefault().ToString("C")
                    }
                }
            </td>

            <td>
                @foreach (var item in group)
                {
                    if (item.Invoice.Select(a => a.Month).Contains(Alliance_for_Life.Models.Months.April))
                    {

                    @item.Invoice.Where(a => a.Month == Alliance_for_Life.Models.Months.April).Select(a => a.GrandTotal).SingleOrDefault().ToString("C")
                    }
                }
            </td>
            <td>
                @foreach (var item in group)
                {
                    if (item.Invoice.Select(a => a.Month).Contains(Alliance_for_Life.Models.Months.May))
                    {
                    @item.Invoice.Where(a => a.Month == Alliance_for_Life.Models.Months.May).Select(a => a.GrandTotal).SingleOrDefault().ToString("C")
                    }
                }
            </td>
            <td>
                @foreach (var item in group)
                {
                    if (item.Invoice.Select(a => a.Month).Contains(Alliance_for_Life.Models.Months.June))
                    {

                    @item.Invoice.Where(a => a.Month == Alliance_for_Life.Models.Months.June).Select(a => a.GrandTotal).SingleOrDefault().ToString("C")
                    }
                }
            </td>


            <td>
                @Html.Encode(group.FirstOrDefault().CycleEndAdjustments.ToString("C"))
            </td>
            <td>
                @Html.Encode(group.FirstOrDefault().AllocatedNewBudget.ToString("C"))
            </td>
            <td>
                @Html.Encode(group.FirstOrDefault().AllocatedOldBudget.ToString("C"))
            </td>
            <td>
                @Html.Encode(group.FirstOrDefault().AllocationAdjustedDate.ToShortDateString())
            </td>
        </tr>
    }
</table>

