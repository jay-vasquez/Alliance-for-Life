@model PagedList.IPagedList<Alliance_for_Life.ViewModels.BudgetViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "First Quarter";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <h2>Budget Price Analysis First Quarter</h2>
    <form>
        @using (Html.BeginForm())
        {
            <div class="container-fluid" style="padding-left: 15px;">
                <div class="row">
                    <div class="col-xs-5th-1 col-sm-3" style="align-content:center;">
                        Search By Region: @Html.DropDownList("searchString", new SelectList(new[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 }), "", htmlAttributes: new { @class = "form-control", required = "required", onchange = "this.form.submit()" })
                    </div>
                    <div class="col-xs-5th-1 col-sm-6">
                        @Html.DropDownList("Year", null, "Select Year", htmlAttributes: new { @class = "form-control", onchange = "this.form.submit()" })
                    </div>
                    <div class="col-xs-5th-1 col-sm-3" style="align-content:center;">
                        Results Shown per Page: @Html.DropDownList("pgSize", new SelectList(new[] { 10, 20, 30, 40, 50 }), htmlAttributes: new { @class = "form-control", onchange = "this.form.submit()" })
                    </div>
                </div>
            </div>
        }
        <br />
    </form>
    <table id="dtBasicExample" class="table table-striped table-bordered table-sm" style="font-size:16px" cellspacing="0" width="100">
        <thead>
            <tr style="font-size:16px">
                <th></th>
                <th class="th-sm">
                    @Html.ActionLink("Year", "Index", new { sortOrder = ViewBag.YearSortParm })

                </th>
                <th class="th-sm">
                    @Html.ActionLink("Region", "Index", new { sortOrder = ViewBag.RegionSortParm })&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                </th>
                <th class="th-sm">
                    Salaries or Wages
                </th>
                <th class="th-sm">
                    Employee Benefits
                </th>
                <th class="th-sm">
                    Employee Travel
                </th>
                <th class="th-sm">
                    Employee Training
                </th>
                <th class="th-sm">
                    Office Rent
                </th>
                <th class="th-sm">
                    Office Utilities
                </th>
                <th class="th-sm">
                    Facility Insurance
                </th>
                <th class="th-sm">
                    Office Supplies
                </th>
                <th class="th-sm">
                    Equipment
                </th>
                <th class="th-sm">
                    Office Communications
                </th>
                <th class="th-sm">
                    Office Maintenance
                </th>
                <th class="th-sm">
                    Consulting Fees
                </th>
                <th class="th-sm">
                    EFT Fees
                </th>
                <th class="th-sm">
                    Background Check
                </th>
                <th class="th-sm">
                    Other
                </th>
                <th class="th-sm">
                    Janitorial Services
                </th>
                <th class="th-sm">
                    Depreciation
                </th>
                <th class="th-sm">
                    Technical Support
                </th>
                <th class="th-sm">
                    Security Services
                </th>
                <th class="th-sm">
                    Admininstration Totals
                </th>
                <th class="th-sm">
                    Administration Fee
                </th>
                <th>

                </th>
                <th class="th-sm">
                    Transportation
                </th>
                <th class="th-sm">
                    Job Training
                </th>
                <th class="th-sm">
                    Tuition Assistance
                </th>
                <th class="th-sm">
                    Contracted Residential Care
                </th>
                <th class="th-sm">
                    Utility Assistance
                </th>
                <th class="th-sm">
                    Emergency Shelter
                </th>
                <th class="th-sm">
                    Housing Assistance
                </th>
                <th class="th-sm">
                    Childcare
                </th>
                <th class="th-sm">
                    Clothing
                </th>
                <th class="th-sm">
                    Food
                </th>
                <th class="th-sm">
                    Supplies
                </th>
                <th class="th-sm">
                    RFO Costs
                </th>
                <th class="th-sm">
                    Other 1
                </th>
                <th class="th-sm">
                    Other 2
                </th>
                <th class="th-sm">
                    Participation Total Costs
                </th>
                <th class="th-sm">
                    Admin and Participation Total Costs
                </th>
        </thead>
        <tr>
            <th class="th-sm">
                Budgeted Amounts
            </th>
            @foreach (var group in Model.GroupBy(item => item.budgetcosts.Region))
            {
                <td>
                    @group.FirstOrDefault().budgetcosts.Year
                </td>
                <td>
                    @group.FirstOrDefault().budgetcosts.Region
                </td>
                <td>
                    @Model.Sum(a => a.admincost.ASalandWages).ToString("C")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.AEmpBenefits).ToString("C")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.AEmpTravel).ToString("C")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.AEmpTraining).ToString("C")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.AOfficeRent).ToString("C")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.AOfficeUtilities).ToString("C")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.AFacilityIns).ToString("C")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.AOfficeSupplies).ToString("C")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.AEquipment).ToString("C")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.AOfficeCommunications).ToString("C")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.AOfficeMaint).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.AConsulting).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.SubConPayCost).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.BackgrounCheck).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.Other).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.AJanitorServices).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.ADepreciation).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.ATechSupport).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.ASecurityServices).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.ATotCosts).ToString("C")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.AdminFee).ToString("C")
                </td>
                <td ></td >
                <td>
                    @Model.Sum(a => a.budgetcosts.Trasportation).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.JobTraining).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.TuitionAssistance).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.ContractedResidential).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.UtilityAssistance).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.EmergencyShelter).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.HousingAssistance).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.Childcare).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.Clothing).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.Food).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.Supplies).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.RFO).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.RFO).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.RFO).ToString("c")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.BTotal).ToString("C")
                </td>
                <td>
                    @Model.Sum(a => a.budgetcosts.Maxtot).ToString("C")
                </td>
            }
<tr />
               
</table>

    <p>
        @using (Html.BeginForm("Export", "BudgetCosts", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <input type="submit" name="BudgetInvoiceId" id="BudgetInvoiceId" value="Export All to Excel" class="btn btn-group-sm btn-success" />
        }
    </p>

    <br />

    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, @class="pagination" }))
</div>
