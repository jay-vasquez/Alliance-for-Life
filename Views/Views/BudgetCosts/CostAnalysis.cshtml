@model PagedList.IPagedList<Alliance_for_Life.ViewModels.BudgetViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Cost Analysis Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <h2>@ViewBag.Title</h2>
    <form>
        @using (Html.BeginForm())
        {
            <div class="container-fluid" style="padding-left: 15px;">
                <div class="row">
                    <div class="col-xs-5th-1 col-sm-3" style="align-content:center;">
                        Search By Region: @Html.DropDownList("searchString", new SelectList(new[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 }), "", htmlAttributes: new { @class = "form-control", required = "required", onchange = "this.form.submit()" })
                    </div>
                    <div class="col-xs-5th-1 col-sm-3" style="align-content:center;">
                        @*Search By Year: @Html.DropDownList("Year", null, "Select Year", htmlAttributes: new { @class = "form-control", onchange = "this.form.submit()" })*@
                        Search By Year: @Html.TextBox("Year", null, htmlAttributes: new { placeholder = "Select Year", @class = "form-control", onchange = "this.form.submit()", name = "Year" })
                    </div>
                    <div class="col-xs-5th-1 col-sm-3" style="align-content:center;">
                        Results Shown per Page: @Html.DropDownList("pgSize", (IEnumerable<SelectListItem>)ViewBag.PageSize, "", htmlAttributes: new { @class = "form-control", onchange = "this.form.submit()" })
                    </div>
                </div>
            </div>
        }
        <br />
    </form>
    <table id="dtBasicExample" class="table table-striped table-bordered table-sm" style="font-size:16px" cellspacing="0" width="100">
        <thead>
            <tr style="font-size:14px; text-align:center;background-color:#c3e1f7;">
                <th></th>
                <th class="th-sm">
                    @Html.ActionLink("Year", "Index", new { sortOrder = ViewBag.YearSortParm })

                </th>
                <th class="th-sm">
                    @Html.ActionLink("Region", "Index", new { sortOrder = ViewBag.RegionSortParm })&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                </th>
                <th class="th-sm">
                    Salaries or Wages
                </th>
                <th class="th-sm">
                    Employee Benefits
                </th>
                <th class="th-sm">
                    Employee Travel
                </th>
                <th class="th-sm">
                    Employee Training
                </th>
                <th class="th-sm">
                    Office Rent
                </th>
                <th class="th-sm">
                    Office Utilities
                </th>
                <th class="th-sm">
                    Facility Insurance
                </th>
                <th class="th-sm">
                    Office Supplies
                </th>
                <th class="th-sm">
                    Equipment
                </th>
                <th class="th-sm">
                    Office Communications
                </th>
                <th class="th-sm">
                    Office Maintenance
                </th>
                <th class="th-sm">
                    Consulting Fees
                </th>
                <th class="th-sm">
                    Other
                </th>
                <th class="th-sm">
                    Other 2
                </th>
                <th class="th-sm">
                    Other 3
                </th>
                <th class="th-sm">
                    Janitorial Services
                </th>
                <th class="th-sm">
                    Depreciation
                </th>
                <th class="th-sm">
                    Technical Support
                </th>
                <th class="th-sm">
                    Security Services
                </th>
                <th class="th-sm">
                    Admininstration Totals
                </th>
                <th class="th-sm">
                    Administration Fee
                </th>
                <th>

                </th>
                <th class="th-sm">
                    Transportation
                </th>
                <th class="th-sm">
                    Job Training
                </th>
                <th class="th-sm">
                    Tuition Assistance
                </th>
                <th class="th-sm">
                    Contracted Residential Care
                </th>
                <th class="th-sm">
                    Utility Assistance
                </th>
                <th class="th-sm">
                    Emergency Shelter
                </th>
                <th class="th-sm">
                    Housing Assistance
                </th>
                <th class="th-sm">
                    Childcare
                </th>
                <th class="th-sm">
                    Clothing
                </th>
                <th class="th-sm">
                    Food
                </th>
                <th class="th-sm">
                    Supplies
                </th>
                <th class="th-sm">
                    Other
                </th>
                <th class="th-sm">
                    Other 1
                </th>
                <th class="th-sm">
                    Other 2
                </th>
                <th class="th-sm">
                    Participation Total Costs
                </th>
                <th class="th-sm">
                    Admin and Participation Total Costs
                </th>
            </tr>
        </thead>

        @foreach (var group in Model.GroupBy(item => item.budgetcosts.Region))
        {
            foreach (var item in group.GroupBy(a => a.budgetcosts.Year))
            {
                <tr style="font-size:14px;">
                    <th class="th-sm">
                        Budgeted Amounts
                    </th>
                    <td>
                        @item.FirstOrDefault().budgetcosts.Year
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.Region
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.ASalandWages.ToString("C")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.AEmpBenefits.ToString("C")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.AEmpTravel.ToString("C")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.AEmpTraining.ToString("C")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.AOfficeRent.ToString("C")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.AOfficeUtilities.ToString("C")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.AFacilityIns.ToString("C")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.AOfficeSupplies.ToString("C")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.AEquipment.ToString("C")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.AOfficeCommunications.ToString("C")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.AOfficeMaint.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.AConsulting.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.SubConPayCost.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.BackgrounCheck.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.Other.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.AJanitorServices.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.ADepreciation.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.ATechSupport.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.ASecurityServices.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.ATotCosts.ToString("C")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.AdminFee.ToString("C")
                    </td>
                    <td></td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.Trasportation.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.JobTraining.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.TuitionAssistance.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.ContractedResidential.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.UtilityAssistance.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.EmergencyShelter.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.HousingAssistance.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.Childcare.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.Clothing.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.Food.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.Supplies.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.RFO.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.RFO.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.RFO.ToString("c")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.BTotal.ToString("C")
                    </td>
                    <td>
                        @item.FirstOrDefault().budgetcosts.Maxtot.ToString("C")
                    </td>
                </tr>
                <tr style="font-size:14px;">
                    <td class="th-sm">
                        Admin Totals
                    </td>

                    <td></td>
                    <td></td>
                    <td>
                        @item.Sum(a => a.admincost.ASalandWages).ToString("C")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.AEmpBenefits).ToString("C")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.AEmpTravel).ToString("C")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.AEmpTraining).ToString("C")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.AOfficeRent).ToString("C")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.AOfficeUtilities).ToString("C")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.AFacilityIns).ToString("C")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.AOfficeSupplies).ToString("C")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.AEquipment).ToString("C")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.AOfficeCommunications).ToString("C")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.AOfficeMaint).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.AConsulting).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.AOther2).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.AOther3).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.ATotCosts).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.AJanitorServices).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.ADepreciation).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.ATechSupport).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.ASecurityServices).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.ATotCosts).ToString("C")
                    </td>
                    <td>
                        @item.Sum(a => a.admincost.ATotCosts * .1).ToString("C")
                    </td>
                    <td>Participation Totals</td>
                    <td>
                        @item.Sum(a => a.particost.PTranspotation).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.particost.PJobTrain).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.particost.PEducationAssistance).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.particost.PResidentialCare).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.particost.PUtilities).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.particost.PHousingEmergency).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.particost.PHousingAssistance).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.particost.PChildCare).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.particost.PClothing).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.particost.PFood).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.particost.PSupplies).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.particost.POther).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.particost.POther2).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.particost.POther3).ToString("c")
                    </td>
                    <td>
                        @item.Sum(a => a.particost.PTotals).ToString("C")
                    </td>
                    <td>
                        @item.Sum((a => a.admincost.ATotCosts + a.particost.PTotals)).ToString("C")
                    </td>
                </tr>
                <tr style="font-size:14px;">
                    <th>
                        Remaining Budget
                    </th>
                    <td></td>
                    <td></td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.ASalandWages - item.Sum(a => a.admincost.ASalandWages), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.AEmpBenefits - item.Sum(a => a.admincost.AEmpBenefits), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.AEmpTravel - item.Sum(a => a.admincost.AEmpTravel), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.AEmpTraining - item.Sum(a => a.admincost.AEmpTraining), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.AOfficeRent - item.Sum(a => a.admincost.AOfficeRent), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.AOfficeUtilities - item.Sum(a => a.admincost.AOfficeUtilities), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.AFacilityIns - item.Sum(a => a.admincost.AFacilityIns), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.AOfficeSupplies - item.Sum(a => a.admincost.AOfficeSupplies), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.AEquipment - item.Sum(a => a.admincost.AEquipment), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.AOfficeCommunications - item.Sum(a => a.admincost.AOfficeCommunications), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.AOfficeMaint - item.Sum(a => a.admincost.AOfficeMaint), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.AConsulting - item.Sum(a => a.admincost.AConsulting), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.SubConPayCost - item.Sum(a => a.admincost.AOther), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.BackgrounCheck - item.Sum(a => a.admincost.AOther2), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.Other - item.Sum(a => a.admincost.AOther), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.AJanitorServices - item.Sum(a => a.admincost.AJanitorServices), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.ADepreciation - item.Sum(a => a.admincost.ADepreciation), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.ATechSupport - item.Sum(a => a.admincost.ATechSupport), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.ASecurityServices - item.Sum(a => a.admincost.ASecurityServices), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.ATotCosts - item.Sum(a => a.admincost.ATotCosts), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.AdminFee - (item.Sum(a => a.admincost.ATotCosts) * .1), 2).ToString("C")
                    </td>
                    <td></td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.Trasportation - item.Sum(a => a.particost.PTranspotation), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.JobTraining - item.Sum(a => a.particost.PJobTrain), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.TuitionAssistance - item.Sum(a => a.particost.PEducationAssistance), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.ContractedResidential - item.Sum(a => a.particost.PResidentialCare), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.UtilityAssistance - item.Sum(a => a.particost.PUtilities), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.EmergencyShelter - item.Sum(a => a.particost.PHousingEmergency), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.HousingAssistance - item.Sum(a => a.particost.PHousingAssistance), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.Childcare - item.Sum(a => a.particost.PChildCare), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.Clothing - item.Sum(a => a.particost.PClothing), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.Food - item.Sum(a => a.particost.PFood), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.Supplies - item.Sum(a => a.particost.PSupplies), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.RFO - item.Sum(a => a.particost.POther), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.RFO - item.Sum(a => a.particost.POther2), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.RFO - item.Sum(a => a.particost.POther3), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.BTotal - item.Sum(a => a.particost.PTotals), 2).ToString("C")
                    </td>
                    <td>
                        @Math.Round(item.FirstOrDefault().budgetcosts.Maxtot - (item.Sum(a => a.admincost.ATotCosts) + item.Sum(a => a.particost.PTotals)), 2).ToString("C")
                    </td>
                </tr>
                <tr style="font-size:14px;">
                    <td class="th-sm">
                        % Spent
                    </td>

                    <td></td>
                    <td></td>
                    <td>

                        @Math.Round(item.Sum(a => a.admincost.ASalandWages) / (item.FirstOrDefault().budgetcosts.ASalandWages), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.AEmpBenefits) / (item.FirstOrDefault().budgetcosts.AEmpBenefits), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.AEmpTravel) / (item.FirstOrDefault().budgetcosts.AEmpTravel), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.AEmpTraining) / (item.FirstOrDefault().budgetcosts.AEmpTraining), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.AOfficeRent) / (item.FirstOrDefault().budgetcosts.AOfficeRent), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.AOfficeUtilities) / (item.FirstOrDefault().budgetcosts.AOfficeUtilities), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.AFacilityIns) / (item.FirstOrDefault().budgetcosts.AFacilityIns), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.AOfficeSupplies) / (item.FirstOrDefault().budgetcosts.AOfficeSupplies), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.AEquipment) / (item.FirstOrDefault().budgetcosts.AEquipment), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.AOfficeCommunications) / (item.FirstOrDefault().budgetcosts.AOfficeCommunications), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.AOfficeMaint) / (item.FirstOrDefault().budgetcosts.AOfficeMaint), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.AConsulting) / (item.FirstOrDefault().budgetcosts.AConsulting), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.AOther2) / (item.FirstOrDefault().budgetcosts.SubConPayCost), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.AOther3) / (item.FirstOrDefault().budgetcosts.BackgrounCheck), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.AOther) / (item.FirstOrDefault().budgetcosts.Other), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.AJanitorServices) / (item.FirstOrDefault().budgetcosts.AJanitorServices), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.ADepreciation) / (item.FirstOrDefault().budgetcosts.ADepreciation), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.ATechSupport) / (item.FirstOrDefault().budgetcosts.ATechSupport), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.ASecurityServices) / (item.FirstOrDefault().budgetcosts.ASecurityServices), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.ATotCosts) / (item.FirstOrDefault().budgetcosts.ATotCosts), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.ATotCosts * .1) / (item.FirstOrDefault().budgetcosts.ATotCosts), 4)%
                    </td>
                    <td></td>
                    <td>
                        @Math.Round(item.Sum(a => a.particost.PTranspotation) / (item.FirstOrDefault().budgetcosts.Trasportation), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.particost.PJobTrain) / (item.FirstOrDefault().budgetcosts.JobTraining), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.particost.PEducationAssistance) / (item.FirstOrDefault().budgetcosts.TuitionAssistance), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.particost.PResidentialCare) / (item.FirstOrDefault().budgetcosts.ContractedResidential), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.particost.PUtilities) / (item.FirstOrDefault().budgetcosts.UtilityAssistance), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.particost.PHousingEmergency) / (item.FirstOrDefault().budgetcosts.EmergencyShelter), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.particost.PHousingAssistance) / (item.FirstOrDefault().budgetcosts.HousingAssistance), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.particost.PChildCare) / (item.FirstOrDefault().budgetcosts.Childcare), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.particost.PClothing) / (item.FirstOrDefault().budgetcosts.Clothing), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.particost.PFood) / (item.FirstOrDefault().budgetcosts.Food), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.particost.PSupplies) / (item.FirstOrDefault().budgetcosts.Supplies), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.particost.POther) / (item.FirstOrDefault().budgetcosts.Other), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.particost.POther2) / (item.FirstOrDefault().budgetcosts.RFO), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.particost.POther3) / (item.FirstOrDefault().budgetcosts.RFO), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.particost.PTotals) / (item.FirstOrDefault().budgetcosts.BTotal), 2)%
                    </td>
                    <td>
                        @Math.Round(item.Sum(a => a.admincost.ATotCosts + a.particost.PTotals) / (item.FirstOrDefault().budgetcosts.Maxtot), 2)%
                    </td>
                </tr>
                <tr class="blank_row">
                    <td bgcolor="#fff" colspan="100">&nbsp;</td>
                </tr>
            }
        }

    </table>

    <p>
        @using (Html.BeginForm("Export", "BudgetCosts", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <input type="submit" name="BudgetInvoiceId" id="BudgetInvoiceId" value="Export All to Excel" class="btn btn-group-sm btn-success" />
        }
    </p>

    <br />

    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("CostAnalysis",
        new { page, pgSize = ViewBag.psize, @class = "pagination" }))
</div>

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.2.0/css/datepicker.min.css" rel="stylesheet">

@section Scripts {

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.2.0/js/bootstrap-datepicker.min.js"></script>
    <script>
        var dp = $("#Year").datepicker({
            format: "yyyy",
            startView: "years",
            minViewMode: "years"
        });
    </script>
}
